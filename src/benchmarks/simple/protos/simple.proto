syntax = "proto3";

package protos;

import "gorums.proto";
import "google/protobuf/empty.proto";
option go_package = ".";

service Simple {
  rpc BroadcastCall1(WriteRequest1) returns (WriteResponse1) {
    option (gorums.broadcastcall) = true;
   }
  rpc BroadcastCall2(WriteRequest2) returns (WriteResponse2) {
    option (gorums.broadcastcall) = true;
   }
  rpc BroadcastIntermediate(BroadcastRequest) returns (google.protobuf.Empty) {
    option (gorums.broadcast) = true;
   }
  rpc Broadcast(BroadcastRequest) returns (google.protobuf.Empty) {
    option (gorums.broadcast) = true;
   }
	rpc Benchmark(google.protobuf.Empty) returns (Result) {
		option (gorums.quorumcall) = true;
	}
}

message WriteRequest1 {
  string Id = 1;
  string Message = 2;
}

message WriteRequest2 {
  string Id = 1;
  bytes Data = 2;
}

message WriteResponse1 {
  string Id = 1;
  string Message = 2;
}

message WriteResponse2 {
  string Id = 1;
  bytes Data = 2;
}

message BroadcastRequest {
  string Id = 1;
  string Message = 2;
  bytes Data = 3;
}

message Result {
	repeated Metric metrics = 1;
}

message Metric {
	uint64 TotalNum          = 1;
	uint64 GoroutinesStarted = 2;
	uint64 GoroutinesStopped = 3;
	map<string, GoroutineMetric> Goroutines        = 4;
	uint64 FinishedReqsTotal =      5;
	uint64 FinishedReqsSuccesful =      6;
	uint64 FinishedReqsFailed =      7;
	uint64 Processed         =8;
	uint64 Dropped           =9;
	uint64 Invalid           =10;
	uint64 AlreadyProcessed  =11;
	TimingMetric RoundTripLatency  =12;
	TimingMetric ReqLatency        = 13;
	map<uint32, uint64> ShardDistribution = 14;
  string Addr = 15;
}

message GoroutineMetric {
	uint64 start = 1;
	uint64 end = 2;
}

message TimingMetric {
	uint64 avg = 1;
	uint64 min = 2;
	uint64 max = 3;
}